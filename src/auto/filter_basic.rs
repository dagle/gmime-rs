// This file was generated by gir (https://github.com/gtk-rs/gir @ 2f0a317)
// from gir-files (https://github.com/gtk-rs/gir-files @ b215ee8)
// DO NOT EDIT

use ContentEncoding;
use Filter;
use ffi;
use glib::object::Cast;
use glib::translate::*;
use std::fmt;

glib_wrapper! {
    pub struct FilterBasic(Object<ffi::GMimeFilterBasic, ffi::GMimeFilterBasicClass, FilterBasicClass>) @extends Filter;

    match fn {
        get_type => || ffi::g_mime_filter_basic_get_type(),
    }
}

impl FilterBasic {
    pub fn new(encoding: ContentEncoding, encode: bool) -> FilterBasic {
        unsafe {
            Filter::from_glib_full(ffi::g_mime_filter_basic_new(encoding.to_glib(), encode.to_glib())).unsafe_cast()
        }
    }
}

pub const NONE_FILTER_BASIC: Option<&FilterBasic> = None;

impl fmt::Display for FilterBasic {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "FilterBasic")
    }
}
