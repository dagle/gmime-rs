// This file was generated by gir (https://github.com/gtk-rs/gir @ ad40c01)
// from gir-files (https://github.com/gtk-rs/gir-files @ 5b96546)
// DO NOT EDIT

use glib::object::Cast;
use glib::translate::*;
use gmime_sys;
use std::fmt;
use CryptoContext;

glib_wrapper! {
    pub struct GpgContext(Object<gmime_sys::GMimeGpgContext, gmime_sys::GMimeGpgContextClass, GpgContextClass>) @extends CryptoContext;

    match fn {
        get_type => || gmime_sys::g_mime_gpg_context_get_type(),
    }
}

impl GpgContext {
    pub fn new() -> GpgContext {
        unsafe {
            CryptoContext::from_glib_full(gmime_sys::g_mime_gpg_context_new()).unsafe_cast()
        }
    }
}

impl Default for GpgContext {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for GpgContext {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "GpgContext")
    }
}
