// This file was generated by gir (https://github.com/gtk-rs/gir @ ad40c01)
// from gir-files (https://github.com/gtk-rs/gir-files @ 5b96546)
// DO NOT EDIT

use glib::translate::*;
use gmime_sys;

bitflags! {
    pub struct DecryptFlags: u32 {
        const NONE = 0;
        const EXPORT_SESSION_KEY = 1;
        const NO_VERIFY = 2;
        const ENABLE_KEYSERVER_LOOKUPS = 32768;
        const ENABLE_ONLINE_CERTIFICATE_CHECKS = 32768;
    }
}

#[doc(hidden)]
impl ToGlib for DecryptFlags {
    type GlibType = gmime_sys::GMimeDecryptFlags;

    fn to_glib(&self) -> gmime_sys::GMimeDecryptFlags {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<gmime_sys::GMimeDecryptFlags> for DecryptFlags {
    fn from_glib(value: gmime_sys::GMimeDecryptFlags) -> DecryptFlags {
        DecryptFlags::from_bits_truncate(value)
    }
}

bitflags! {
    pub struct FilterBestFlags: u32 {
        const CHARSET = 1;
        const ENCODING = 2;
    }
}

#[doc(hidden)]
impl ToGlib for FilterBestFlags {
    type GlibType = gmime_sys::GMimeFilterBestFlags;

    fn to_glib(&self) -> gmime_sys::GMimeFilterBestFlags {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<gmime_sys::GMimeFilterBestFlags> for FilterBestFlags {
    fn from_glib(value: gmime_sys::GMimeFilterBestFlags) -> FilterBestFlags {
        FilterBestFlags::from_bits_truncate(value)
    }
}

#[cfg(any(feature = "v3_2", feature = "dox"))]
bitflags! {
    pub struct OpenPGPState: u32 {
        const NONE = 0;
        const BEGIN_PGP_MESSAGE = 1;
        const END_PGP_MESSAGE = 3;
        const BEGIN_PGP_SIGNED_MESSAGE = 4;
        const BEGIN_PGP_SIGNATURE = 12;
        const END_PGP_SIGNATURE = 28;
        const BEGIN_PGP_PUBLIC_KEY_BLOCK = 32;
        const END_PGP_PUBLIC_KEY_BLOCK = 96;
        const BEGIN_PGP_PRIVATE_KEY_BLOCK = 128;
        const END_PGP_PRIVATE_KEY_BLOCK = 384;
    }
}

#[cfg(any(feature = "v3_2", feature = "dox"))]
#[doc(hidden)]
impl ToGlib for OpenPGPState {
    type GlibType = gmime_sys::GMimeOpenPGPState;

    fn to_glib(&self) -> gmime_sys::GMimeOpenPGPState {
        self.bits()
    }
}

#[cfg(any(feature = "v3_2", feature = "dox"))]
#[doc(hidden)]
impl FromGlib<gmime_sys::GMimeOpenPGPState> for OpenPGPState {
    fn from_glib(value: gmime_sys::GMimeOpenPGPState) -> OpenPGPState {
        OpenPGPState::from_bits_truncate(value)
    }
}

bitflags! {
    pub struct VerifyFlags: u32 {
        const NONE = 0;
        const ENABLE_KEYSERVER_LOOKUPS = 32768;
        const ENABLE_ONLINE_CERTIFICATE_CHECKS = 32768;
    }
}

#[doc(hidden)]
impl ToGlib for VerifyFlags {
    type GlibType = gmime_sys::GMimeVerifyFlags;

    fn to_glib(&self) -> gmime_sys::GMimeVerifyFlags {
        self.bits()
    }
}

#[doc(hidden)]
impl FromGlib<gmime_sys::GMimeVerifyFlags> for VerifyFlags {
    fn from_glib(value: gmime_sys::GMimeVerifyFlags) -> VerifyFlags {
        VerifyFlags::from_bits_truncate(value)
    }
}

