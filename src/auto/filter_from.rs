// This file was generated by gir (https://github.com/gtk-rs/gir @ ad40c01)
// from gir-files (https://github.com/gtk-rs/gir-files @ 5b96546)
// DO NOT EDIT

use glib::object::Cast;
use glib::translate::*;
use gmime_sys;
use std::fmt;
use Filter;
use FilterFromMode;

glib_wrapper! {
    pub struct FilterFrom(Object<gmime_sys::GMimeFilterFrom, gmime_sys::GMimeFilterFromClass, FilterFromClass>) @extends Filter;

    match fn {
        get_type => || gmime_sys::g_mime_filter_from_get_type(),
    }
}

impl FilterFrom {
    pub fn new(mode: FilterFromMode) -> FilterFrom {
        unsafe {
            Filter::from_glib_full(gmime_sys::g_mime_filter_from_new(mode.to_glib())).unsafe_cast()
        }
    }
}

pub const NONE_FILTER_FROM: Option<&FilterFrom> = None;

impl fmt::Display for FilterFrom {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "FilterFrom")
    }
}
