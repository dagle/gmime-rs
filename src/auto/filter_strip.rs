// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/vhdirk/gir-files.git)
// DO NOT EDIT

use crate::Filter;
use glib::object::Cast;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "GMimeFilterStrip")]
    pub struct FilterStrip(Object<ffi::GMimeFilterStrip, ffi::GMimeFilterStripClass>) @extends Filter;

    match fn {
        type_ => || ffi::g_mime_filter_strip_get_type(),
    }
}

impl FilterStrip {
    #[doc(alias = "g_mime_filter_strip_new")]
    pub fn new() -> FilterStrip {
        assert_initialized_main_thread!();
        unsafe { Filter::from_glib_full(ffi::g_mime_filter_strip_new()).unsafe_cast() }
    }
}

impl Default for FilterStrip {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_FILTER_STRIP: Option<&FilterStrip> = None;

impl fmt::Display for FilterStrip {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("FilterStrip")
    }
}
