// This file was generated by gir (https://github.com/gtk-rs/gir @ fe7a6ff+)
// from gir-files (https://github.com/gtk-rs/gir-files @ 33386b3)
// DO NOT EDIT

use ParamEncodingMethod;
use ffi;
use glib::object::IsA;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use std::mem;
use std::ptr;

glib_wrapper! {
    pub struct Param(Object<ffi::GMimeParam, ffi::GMimeParamClass>);

    match fn {
        get_type => || ffi::g_mime_param_get_type(),
    }
}

pub trait ParamExt {
    fn get_charset(&self) -> Option<String>;

    fn get_encoding_method(&self) -> ParamEncodingMethod;

    fn get_lang(&self) -> Option<String>;

    fn get_name(&self) -> Option<String>;

    fn get_value(&self) -> Option<String>;

    fn set_charset(&self, charset: &str);

    fn set_encoding_method(&self, method: ParamEncodingMethod);

    fn set_lang(&self, lang: &str);

    fn set_value(&self, value: &str);
}

impl<O: IsA<Param>> ParamExt for O {
    fn get_charset(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::g_mime_param_get_charset(self.to_glib_none().0))
        }
    }

    fn get_encoding_method(&self) -> ParamEncodingMethod {
        unsafe {
            from_glib(ffi::g_mime_param_get_encoding_method(self.to_glib_none().0))
        }
    }

    fn get_lang(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::g_mime_param_get_lang(self.to_glib_none().0))
        }
    }

    fn get_name(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::g_mime_param_get_name(self.to_glib_none().0))
        }
    }

    fn get_value(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::g_mime_param_get_value(self.to_glib_none().0))
        }
    }

    fn set_charset(&self, charset: &str) {
        unsafe {
            ffi::g_mime_param_set_charset(self.to_glib_none().0, charset.to_glib_none().0);
        }
    }

    fn set_encoding_method(&self, method: ParamEncodingMethod) {
        unsafe {
            ffi::g_mime_param_set_encoding_method(self.to_glib_none().0, method.to_glib());
        }
    }

    fn set_lang(&self, lang: &str) {
        unsafe {
            ffi::g_mime_param_set_lang(self.to_glib_none().0, lang.to_glib_none().0);
        }
    }

    fn set_value(&self, value: &str) {
        unsafe {
            ffi::g_mime_param_set_value(self.to_glib_none().0, value.to_glib_none().0);
        }
    }
}
