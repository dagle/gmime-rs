// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/vhdirk/gir-files.git)
// DO NOT EDIT

use crate::CryptoContext;
use glib::{prelude::*, translate::*};
use std::fmt;

glib::wrapper! {
    #[doc(alias = "GMimePkcs7Context")]
    pub struct Pkcs7Context(Object<ffi::GMimePkcs7Context, ffi::GMimePkcs7ContextClass>) @extends CryptoContext;

    match fn {
        type_ => || ffi::g_mime_pkcs7_context_get_type(),
    }
}

impl Pkcs7Context {
    #[doc(alias = "g_mime_pkcs7_context_new")]
    pub fn new() -> Pkcs7Context {
        assert_initialized_main_thread!();
        unsafe { CryptoContext::from_glib_full(ffi::g_mime_pkcs7_context_new()).unsafe_cast() }
    }
}

impl Default for Pkcs7Context {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for Pkcs7Context {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("Pkcs7Context")
    }
}
