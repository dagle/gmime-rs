// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/vhdirk/gir-files.git)
// DO NOT EDIT

use crate::{Filter};
use glib::{prelude::*,translate::*};
use std::{fmt};

glib::wrapper! {
    #[doc(alias = "GMimeFilterDos2Unix")]
    pub struct FilterDos2Unix(Object<ffi::GMimeFilterDos2Unix, ffi::GMimeFilterDos2UnixClass>) @extends Filter;

    match fn {
        type_ => || ffi::g_mime_filter_dos2unix_get_type(),
    }
}

impl FilterDos2Unix {
        pub const NONE: Option<&'static FilterDos2Unix> = None;
    

    #[doc(alias = "g_mime_filter_dos2unix_new")]
    pub fn new(ensure_newline: bool) -> FilterDos2Unix {
        assert_initialized_main_thread!();
        unsafe {
            Filter::from_glib_full(ffi::g_mime_filter_dos2unix_new(ensure_newline.into_glib())).unsafe_cast()
        }
    }
}

impl fmt::Display for FilterDos2Unix {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("FilterDos2Unix")
    }
}
