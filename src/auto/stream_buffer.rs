// This file was generated by gir (https://github.com/gtk-rs/gir @ 9e3cb65)
// from gir-files (https://github.com/gtk-rs/gir-files @ b215ee8+)
// DO NOT EDIT

use Stream;
use StreamBufferMode;
use glib::object::Cast;
use glib::object::IsA;
use glib::translate::*;
use gmime_sys;
use std::fmt;

glib_wrapper! {
    pub struct StreamBuffer(Object<gmime_sys::GMimeStreamBuffer, gmime_sys::GMimeStreamBufferClass, StreamBufferClass>) @extends Stream;

    match fn {
        get_type => || gmime_sys::g_mime_stream_buffer_get_type(),
    }
}

impl StreamBuffer {
    pub fn new<P: IsA<Stream>>(source: &P, mode: StreamBufferMode) -> StreamBuffer {
        unsafe {
            Stream::from_glib_full(gmime_sys::g_mime_stream_buffer_new(source.as_ref().to_glib_none().0, mode.to_glib())).unsafe_cast()
        }
    }
}

pub const NONE_STREAM_BUFFER: Option<&StreamBuffer> = None;

impl fmt::Display for StreamBuffer {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "StreamBuffer")
    }
}
