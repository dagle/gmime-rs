// This file was generated by gir (https://github.com/gtk-rs/gir @ 2f0a317)
// from gir-files (https://github.com/gtk-rs/gir-files @ b215ee8)
// DO NOT EDIT

use Filter;
use ffi;
use glib::object::Cast;
use glib::translate::*;
use std::fmt;

glib_wrapper! {
    pub struct FilterSmtpData(Object<ffi::GMimeFilterSmtpData, ffi::GMimeFilterSmtpDataClass, FilterSmtpDataClass>) @extends Filter;

    match fn {
        get_type => || ffi::g_mime_filter_smtp_data_get_type(),
    }
}

impl FilterSmtpData {
    pub fn new() -> FilterSmtpData {
        unsafe {
            Filter::from_glib_full(ffi::g_mime_filter_smtp_data_new()).unsafe_cast()
        }
    }
}

impl Default for FilterSmtpData {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_FILTER_SMTP_DATA: Option<&FilterSmtpData> = None;

impl fmt::Display for FilterSmtpData {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "FilterSmtpData")
    }
}
